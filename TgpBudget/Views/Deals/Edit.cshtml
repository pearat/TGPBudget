@model TgpBudget.Models.DealViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Deal</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.IsExpense)
        

        <div class="form-group">
            @Html.LabelFor(model => model.BankAcctId, "Account", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.BankAcctId, null, htmlAttributes: new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.BankAcctId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("CategoryId", (IEnumerable<SelectListItem>)ViewBag.CategoryId, htmlAttributes: new { @class = "form-control" })*@
                @*@Html.DropDownListFor(model => model.CategoryId, (IEnumerable<SelectListItem>)ViewBag.CategoryId, htmlAttributes: new { @class = "form-control" })*@
                @Html.DropDownListFor(model => model.CategoryId, null, htmlAttributes: new { @class = "form-control" })
            
                @*@Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="control-group">
            <div style="display:inline">
                <label for="date-picker-1" class="control-label">
                    <span class="glyphicon glyphicon-calendar">
                        Transaction Date
                    </span>
                </label>
                <div class="controls">
                    <input class="datepicker" data-date-format="mm/dd/yyyy" name="DealDate"
                           value="@Model.DealDate.ToString("MM/dd/yyyy")">
                </div>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Payee, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Payee, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Payee, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Reconciled, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="btn btn-info btn-simple btn-lg">

                    @Html.CheckBoxFor(model => model.Reconciled, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts{
    <script type="text/javascript">

        $(document).ready(function () {

            $('.datepicker').datepicker({
                format: 'dd MMM yyyy'
            });

            $(".date-picker").on("change", function () {
                var id = $(this).attr("id");
                var val = $("label[for='" + id + "']").text();
                $("#msg").text(val + " changed");
            });
        });
        $(function () {
            //    var j = $('#IncExpBtn').val();
            //    console.log('At start of Edit, j: ' + j);
            //    var k = ($('#IncExpBtn').bootstrapToggle('on'));
            //    console.log('At start of Edit, k: ' + k);
            //    if ($('#IncExpBtn').bootstrapToggle('on')) {
            //        $('#IncomeList').hide();
            //        $('#ExpenseList').show();
            //        $('#IncExpBtn').prop('checked', false);
            //    }
            //    else {
            //        $('#IncomeList').show();
            //        $('#ExpenseList').hide();
            //        $('#IncExpBtn').val("");
            //        $('#IncExpBtn').prop('checked', true);
            //    };
            //});
            //function toggleOnByInput() {
            //    $('#IncExpBtn').prop('checked', true).change()
            //}
            //function toggleOffByInput() {
            //    $('#IncExpBtn').prop('checked', false).change()
            //}
            //function toggleOn() {
            //    $('#IncExpBtn').bootstrapToggle('on')
            //}
            //function toggleOff() {
            //    $('#IncExpBtn').bootstrapToggle('off')
            //}
            //$('#IncomeList').hide();
            //$('#ExpenseList').hide();
            //var j=$('#IncExpBtn').val();
            //console.log('At start of Edit, j: '+j);
            //if ($('#IncExpBtn').bootstrapToggle('on')) {
            //    $('#IncomeList').hide();
            //    $('#ExpenseList').show();
            //    $('IncExpBtn').prop('checked', false);
            //}
            //else {
            //    $('#IncomeList').show();
            //    $('#ExpenseList').hide();
            //    $('#IncExpBtn').val("");
            //    $('IncExpBtn').prop('checked', true);
            //};
        });

    </script>
}