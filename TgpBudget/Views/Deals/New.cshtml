@model TgpBudget.Models.DealViewModel

@{
    ViewBag.Title = "New Transaction";
}

<h2>New Transaction</h2>

<h4>Enter a new income or expense item</h4>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.BankAcctId, "Account", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BankAcctId", null, htmlAttributes: new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.BankAcctId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:inline">
            <div class="col-md-2 control-label">
                <input type="checkbox" data-toggle="toggle" data-on="Expense" data-off="Income" checked
                       id="IncExpBtn" name="IncomeToggle" data-onstyle="success" data-offstyle="info">
            </div>
            <div id="ExpenseList" style="padding-top:-19px">
                <div class="col-md-10">
                    @Html.DropDownList("ExpenseId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ExpenseId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div id="IncomeList" style="padding-top:-19px">
                <div class="col-md-10">
                    @Html.DropDownList("IncomeId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IncomeId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.DealDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    Html.EditorFor(model => model.DealDate, new { htmlAttributes = new { class = "form-control", value="System.DateTimeOffset.Now" } })

                    @Html.EditorFor(model => model.DealDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DealDate, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="control-group">
                <div style="display:inline">
                    <label for="date-picker-1" class="control-label">
                        <span class="glyphicon glyphicon-calendar">
                            Transaction Date
                        </span>
                    </label>
                    <div class="controls">
                        <input class="datepicker" data-date-format="mm/dd/yyyy" name="DealDate"
                               value="@Model.DealDate.ToString("MM/dd/yyyy")">
                    </div>
                </div>
            </div>



        @*<div class="input-group date">
            <input type="text" class="form-control" value="@Model.DealDate.ToString("MM/dd/yyyy")">
            <div class="input-group-addon">
                <span class="glyphicon glyphicon-th">Transaction Date</span>
            </div>
        </div>*@





        <div class="form-group">
            @Html.LabelFor(model => model.Payee, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Payee, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Payee, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Reconciled, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="btn btn-info btn-simple btn-lg">
                    @Html.CheckBoxFor(model => model.Reconciled, "")
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {

    <script type="text/javascript">
        $(function () {
            $('#IncomeList').hide();
            $('#ExpenseList').show();
            $('#IncExpBtn').val("Income");
            $('#IncExpBtn').change(function () {
                if ($(this).val() == "Income") {
                    $('#IncomeList').show();
                    $('#ExpenseList').hide();
                    $(this).val("Expense");
                }
                else {
                    $('#IncomeList').hide();
                    $('#ExpenseList').show();
                    $(this).val("Income");
                }
            });

            $('.datepicker').datepicker({
                format: 'dd MMM yyyy'
            });

            $(".date-picker").on("change", function () {
                var id = $(this).attr("id");
                var val = $("label[for='" + id + "']").text();
                $("#msg").text(val + " changed");
            });
        });
    </script>
}